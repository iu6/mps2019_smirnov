; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\system_mdr32f9qx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\system_mdr32f9qx.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -ID:\Keil555\1986VE9X\card\RTE -ID:\Keil555\1986VE9X\card\RTE\Device\MDR1986BE93 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Driver\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\RTOS\RTX\INC -IC:\Keil_v5\ARM\PACK\Keil\MDK-Middleware\6.5.0\FileSystem\Include -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\CMSIS_Driver\MDR1986VE9X -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Config -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\CoreSupport -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -D__RTX -D__UVISION_VERSION=516 -D_RTE_ -DUSE_MDR32F9Q3_Rev1 --signed_chars --omf_browse=.\objects\system_mdr32f9qx.crf RTE\Device\MDR1986BE93\system_MDR32F9Qx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;66       */
;;;67     void SystemCoreClockUpdate (void)
000000  b530              PUSH     {r4,r5,lr}
;;;68     {
;;;69       uint32_t cpu_c1_freq, cpu_c2_freq, cpu_c3_freq;
;;;70       uint32_t pll_mul;
;;;71     
;;;72       /* Compute CPU_CLK frequency */
;;;73     
;;;74       /* Determine CPU_C1 frequency */
;;;75       if ((MDR_RST_CLK->CPU_CLOCK & (uint32_t)0x00000002) == (uint32_t)0x00000002)
000002  4c20              LDR      r4,|L1.132|
000004  68e4              LDR      r4,[r4,#0xc]
000006  f0040402          AND      r4,r4,#2
00000a  2c02              CMP      r4,#2
00000c  d101              BNE      |L1.18|
;;;76       {
;;;77         cpu_c1_freq = HSE_Value;
00000e  481e              LDR      r0,|L1.136|
000010  e000              B        |L1.20|
                  |L1.18|
;;;78       }
;;;79       else
;;;80       {
;;;81         cpu_c1_freq = HSI_Value;
000012  481d              LDR      r0,|L1.136|
                  |L1.20|
;;;82       }
;;;83     
;;;84       if ((MDR_RST_CLK->CPU_CLOCK & (uint32_t)0x00000001) == (uint32_t)0x00000001)
000014  4c1b              LDR      r4,|L1.132|
000016  68e4              LDR      r4,[r4,#0xc]
000018  f0040401          AND      r4,r4,#1
00001c  b104              CBZ      r4,|L1.32|
;;;85       {
;;;86         cpu_c1_freq /= 2;
00001e  0840              LSRS     r0,r0,#1
                  |L1.32|
;;;87       }
;;;88     
;;;89       /* Determine CPU_C2 frequency */
;;;90       cpu_c2_freq = cpu_c1_freq;
000020  4601              MOV      r1,r0
;;;91     
;;;92       if ((MDR_RST_CLK->CPU_CLOCK & (uint32_t)0x00000004) == (uint32_t)0x00000004)
000022  4c18              LDR      r4,|L1.132|
000024  68e4              LDR      r4,[r4,#0xc]
000026  f0040404          AND      r4,r4,#4
00002a  2c04              CMP      r4,#4
00002c  d105              BNE      |L1.58|
;;;93       {
;;;94         /* Determine CPU PLL output frequency */
;;;95         pll_mul = ((MDR_RST_CLK->PLL_CONTROL >> 8) & (uint32_t)0x0F) + 1;
00002e  4c15              LDR      r4,|L1.132|
000030  6864              LDR      r4,[r4,#4]
000032  f3c42403          UBFX     r4,r4,#8,#4
000036  1c63              ADDS     r3,r4,#1
;;;96         cpu_c2_freq *= pll_mul;
000038  4359              MULS     r1,r3,r1
                  |L1.58|
;;;97       }
;;;98     
;;;99       /*Select CPU_CLK from HSI, CPU_C3, LSE, LSI cases */
;;;100      switch ((MDR_RST_CLK->CPU_CLOCK >> 8) & (uint32_t)0x03)
00003a  4c12              LDR      r4,|L1.132|
00003c  68e4              LDR      r4,[r4,#0xc]
00003e  f3c42401          UBFX     r4,r4,#8,#2
000042  b124              CBZ      r4,|L1.78|
000044  2c01              CMP      r4,#1
000046  d006              BEQ      |L1.86|
000048  2c02              CMP      r4,#2
00004a  d113              BNE      |L1.116|
00004c  e00d              B        |L1.106|
                  |L1.78|
;;;101      {
;;;102        case 0 :
;;;103          /* HSI */
;;;104          SystemCoreClock = HSI_Value;
00004e  4c0e              LDR      r4,|L1.136|
000050  4d0e              LDR      r5,|L1.140|
000052  602c              STR      r4,[r5,#0]  ; SystemCoreClock
;;;105          break;
000054  e013              B        |L1.126|
                  |L1.86|
;;;106        case 1 :
;;;107          /* CPU_C3 */
;;;108          /* Determine CPU_C3 frequency */
;;;109          cpu_c3_freq = cpu_c2_freq / ((MDR_RST_CLK->CPU_CLOCK >> 4 & (uint32_t)0x0F) + 1);
000056  4c0b              LDR      r4,|L1.132|
000058  68e4              LDR      r4,[r4,#0xc]
00005a  f3c41403          UBFX     r4,r4,#4,#4
00005e  1c64              ADDS     r4,r4,#1
000060  fbb1f2f4          UDIV     r2,r1,r4
;;;110          SystemCoreClock = cpu_c3_freq;
000064  4c09              LDR      r4,|L1.140|
000066  6022              STR      r2,[r4,#0]  ; SystemCoreClock
;;;111          break;
000068  e009              B        |L1.126|
                  |L1.106|
;;;112        case 2 :
;;;113          /* LSE */
;;;114          SystemCoreClock = LSE_Value;
00006a  f44f4400          MOV      r4,#0x8000
00006e  4d07              LDR      r5,|L1.140|
000070  602c              STR      r4,[r5,#0]  ; SystemCoreClock
;;;115          break;
000072  e004              B        |L1.126|
                  |L1.116|
;;;116        default : /* case 3 */
;;;117          /* LSI */
;;;118          SystemCoreClock = LSI_Value;
000074  f6494440          MOV      r4,#0x9c40
000078  4d04              LDR      r5,|L1.140|
00007a  602c              STR      r4,[r5,#0]  ; SystemCoreClock
;;;119          break;
00007c  bf00              NOP      
                  |L1.126|
00007e  bf00              NOP                            ;105
;;;120      }
;;;121    }
000080  bd30              POP      {r4,r5,pc}
;;;122    
                          ENDP

000082  0000              DCW      0x0000
                  |L1.132|
                          DCD      0x40020000
                  |L1.136|
                          DCD      0x007a1200
                  |L1.140|
                          DCD      SystemCoreClock

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;130      */
;;;131    void SystemInit (void)
000000  b500              PUSH     {lr}
;;;132    {
;;;133    	/* Reset the RST clock configuration to the default reset state */
;;;134    
;;;135      /* Reset all clock but RST_CLK & BKP_CLC bits */
;;;136      MDR_RST_CLK->PER_CLOCK   = (uint32_t)0x8000010;
000002  480d              LDR      r0,|L2.56|
000004  490d              LDR      r1,|L2.60|
000006  61c8              STR      r0,[r1,#0x1c]
;;;137    
;;;138      /* Reset CPU_CLOCK bits */
;;;139      MDR_RST_CLK->CPU_CLOCK   &= (uint32_t)0x00000000;
000008  4608              MOV      r0,r1
00000a  68c0              LDR      r0,[r0,#0xc]
00000c  2000              MOVS     r0,#0
00000e  60c8              STR      r0,[r1,#0xc]
;;;140    
;;;141      /* Reset PLL_CONTROL bits */
;;;142      MDR_RST_CLK->PLL_CONTROL &= (uint32_t)0x00000000;
000010  4608              MOV      r0,r1
000012  6840              LDR      r0,[r0,#4]
000014  2000              MOVS     r0,#0
000016  6048              STR      r0,[r1,#4]
;;;143    
;;;144      /* Reset HSEON and HSEBYP bits */
;;;145      MDR_RST_CLK->HS_CONTROL  &= (uint32_t)0x00000000;
000018  4608              MOV      r0,r1
00001a  6880              LDR      r0,[r0,#8]
00001c  2000              MOVS     r0,#0
00001e  6088              STR      r0,[r1,#8]
;;;146    
;;;147      /* Reset USB_CLOCK bits */
;;;148      MDR_RST_CLK->USB_CLOCK   &= (uint32_t)0x00000000;
000020  4608              MOV      r0,r1
000022  6900              LDR      r0,[r0,#0x10]
000024  2000              MOVS     r0,#0
000026  6108              STR      r0,[r1,#0x10]
;;;149    
;;;150      /* Reset ADC_MCO_CLOCK bits */
;;;151      MDR_RST_CLK->ADC_MCO_CLOCK   &= (uint32_t)0x00000000;
000028  4608              MOV      r0,r1
00002a  6940              LDR      r0,[r0,#0x14]
00002c  2000              MOVS     r0,#0
00002e  6148              STR      r0,[r1,#0x14]
;;;152    
;;;153      SystemCoreClockUpdate();
000030  f7fffffe          BL       SystemCoreClockUpdate
;;;154    }
000034  bd00              POP      {pc}
;;;155    
                          ENDP

000036  0000              DCW      0x0000
                  |L2.56|
                          DCD      0x08000010
                  |L2.60|
                          DCD      0x40020000

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x007a1200

;*** Start embedded assembler ***

#line 1 "RTE\\Device\\MDR1986BE93\\system_MDR32F9Qx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_MDR32F9Qx_c_5d646a67____REV16|
#line 138 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.3.0\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_system_MDR32F9Qx_c_5d646a67____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_MDR32F9Qx_c_5d646a67____REVSH|
#line 153
|__asm___18_system_MDR32F9Qx_c_5d646a67____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_system_MDR32F9Qx_c_5d646a67____RRX|
#line 328
|__asm___18_system_MDR32F9Qx_c_5d646a67____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
